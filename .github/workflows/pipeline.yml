name: pipeline

on:
  push:

jobs:
  unit-test: 
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - run: mvn test
      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2.0.1
      - name: Log coverage percentage
        run: 
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
          
      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/
          
  build:
    runs-on: ubuntu-latest
    needs: unit-test
    steps: 
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Package
        run: mvn package

  publish:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Configurar Maven settings.xml
        run: |
          mkdir -p ~/.m2
          cat <<EOF > ~/.m2/settings.xml
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>github</id>
                <username>VanessaWendling</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Publish package
        run: mvn --batch-mode deploy
        
  deploy-STG:
    runs-on: ubuntu-latest
    environment:
      name: stg
    needs: publish
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Deploy
        shell: bash
        run: 
          echo "Deploy STG"
  
  Smoketest:
    runs-on: ubuntu-latest
    needs: deploy-STG
    
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: bash
        run:
          sh 'src/main/scripts/smoketest.sh'

  testeIntegrados:
    runs-on: ubuntu-latest
    needs: Smoketest
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: bash
        run:
          sh 'src/main/scripts/testeIntegrado.sh'
    
  
  deploy-Pre:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/release'
    environment:
      name: pre
    needs: publish
    steps:
      - name: Deploy
        shell: bash
        run:
          echo "Deploy PRE"

  SmokeTestePre:
    runs-on: ubuntu-latest
    needs: deploy-Pre
    if: github.ref == 'refs/heads/release'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: bash
        run:
          sh 'src/main/scripts/smokeTestePre.sh'
  
  TesteFuncional:
    runs-on: ubuntu-latest
    needs: SmokeTestePre
    if: github.ref == 'refs/heads/release'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: bash
        run:
          sh 'src/main/scripts/testeFuncional.sh'
  
  deploy-Prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: prod
    needs: publish
    steps:
      - name: Deploy
        shell: bash
        run: 
          echo "Deploy PROD"
